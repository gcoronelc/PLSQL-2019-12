CREATE OR REPLACE PACKAGE BODY SISUNI.PKG_GENERAR_VENTA
AS
  --CREAR VENTA
  PROCEDURE SP_CREAR_VENTA(
      P_DV_IDVENTA    IN NUMBER,
      P_DV_IDPRODUCTO IN NUMBER,
      P_DV_CANTIDAD   IN NUMBER,
      P_DV_PRECIO     IN NUMBER,
      P_MENSAJE OUT NOCOPY VARCHAR2)
  IS
    V_DV_IDVENTA    NUMBER:=0;
    V_DV_IDPRODUCTO NUMBER:=0;
    V_DV_CANTIDAD   NUMBER:=0;
    V_N_STOCK       NUMBER:=0;
    V_OK            NUMBER:=0;
  BEGIN
  
    -- VERIFICAR VENTA
    SELECT COUNT(V_IDVENTA)
    INTO V_DV_IDVENTA
    FROM TBL_VENTA
    WHERE V_IDVENTA = P_DV_IDVENTA;
    IF V_DV_IDVENTA  = 0 THEN
      P_MENSAJE     := 'NO SE ENCONTRO VENTA PARA REGISTRAR';
      RETURN;
    END IF;
    
    -- VERIFICAR PRODUCTO
    SELECT COUNT(PR_IDPRODUCTO)
    INTO V_DV_IDPRODUCTO
    FROM TBL_PRODUCTO
    WHERE PR_IDPRODUCTO = P_DV_IDPRODUCTO;
    IF V_DV_IDPRODUCTO  = 0 THEN
      P_MENSAJE        := 'EL PRODUCTO NO SE ENCUENTRA REGISTRADO';
      RETURN;
    END IF;
    
    -- VERIFICAR STOCK
    SELECT PR_STOCK
    INTO V_DV_CANTIDAD
    FROM TBL_PRODUCTO
    WHERE PR_IDPRODUCTO = P_DV_IDPRODUCTO;
    IF P_DV_CANTIDAD    > V_DV_CANTIDAD THEN
      P_MENSAJE        := 'NO HAY STOCK PARA VENTA';
      RETURN;
    END IF;
    
    -- INSERTANDO DETALLE_VENTA
    INSERT
    INTO TBL_DETALLE_VENTA VALUES
      (
        P_DV_IDVENTA,
        P_DV_IDPRODUCTO,
        P_DV_CANTIDAD,
        P_DV_PRECIO
      );
    V_OK := sql%rowcount;
    COMMIT;
    IF V_OK      = 0 THEN
      P_MENSAJE := 'DETALLE_VENTA NO REGISTRADA';
    ELSE
      P_MENSAJE := 'DETALLE_VENTA REGISTRADA';
      SELECT PR_STOCK
      INTO V_N_STOCK
      FROM TBL_PRODUCTO
      WHERE PR_IDPRODUCTO = P_DV_IDPRODUCTO FOR UPDATE;
      UPDATE TBL_PRODUCTO
      SET PR_STOCK        = V_N_STOCK - P_DV_CANTIDAD
      WHERE PR_IDPRODUCTO = P_DV_IDPRODUCTO;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    dbms_output.put_line(SQLERRM);
  END SP_CREAR_VENTA;
END PKG_GENERAR_VENTA;
/