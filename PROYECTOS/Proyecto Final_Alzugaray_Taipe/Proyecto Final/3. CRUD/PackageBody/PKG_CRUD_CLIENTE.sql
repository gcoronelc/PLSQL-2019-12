CREATE OR REPLACE PACKAGE BODY SISUNI.PKG_CRUD_CLIENTE
AS
--CREAR CLIENTE
PROCEDURE SP_INSERTAR_CLIENTE(
    P_CL_DNI       IN TBL_CLIENTE.CL_DNI%TYPE,
    P_CL_NOMBRE    IN TBL_CLIENTE.CL_NOMBRE%TYPE,
    P_CL_TELEFONO  IN TBL_CLIENTE.CL_TELEFONO%TYPE,
    P_CL_SEXO      IN TBL_CLIENTE.CL_SEXO%TYPE,
    P_CL_FECHA_NAC IN TBL_CLIENTE.CL_FECHA_NAC%TYPE,
    P_CL_DIRECCION IN TBL_CLIENTE.CL_DIRECCION%TYPE,
    P_COD_RESPUESTA OUT NOCOPY NUMBER,
    P_MENSAJE OUT NOCOPY       VARCHAR2 )
AS
  V_CL_IDCLIENTE INT;
  V_EXISTEDNI    INT;
BEGIN
  SELECT COUNT(CL_IDCLIENTE)
  INTO V_EXISTEDNI
  FROM TBL_CLIENTE
  WHERE P_CL_DNI  = CL_DNI;
  IF (V_EXISTEDNI > 0) THEN
    RAISE_APPLICATION_ERROR(-20004, 'DNI DE CLIENTE YA REGISTRADO');
  END IF;
  SELECT MAX(CL_IDCLIENTE)+1 INTO V_CL_IDCLIENTE FROM TBL_CLIENTE ;
  INSERT
  INTO TBL_CLIENTE VALUES
    (
      V_CL_IDCLIENTE,
      P_CL_DNI,
      P_CL_NOMBRE,
      P_CL_TELEFONO,
      P_CL_SEXO,
      P_CL_FECHA_NAC,
      P_CL_DIRECCION
    );
  P_COD_RESPUESTA := 0;
  P_MENSAJE       := 'CLIENTE REGISTRADO';
  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  P_COD_RESPUESTA := -1;
  P_MENSAJE       := TO_CHAR(SQLCODE) || ' - ' || SQLERRM;
  ROLLBACK;
END SP_INSERTAR_CLIENTE;
            
--ACTUALIZAR TBL_CLIENTE
PROCEDURE SP_MODIFICAR_CLIENTE(
    P_CL_IDCLIENTE IN TBL_CLIENTE.CL_IDCLIENTE%TYPE,
    P_CL_NOMBRE    IN TBL_CLIENTE.CL_NOMBRE%TYPE,
    P_CL_TELEFONO  IN TBL_CLIENTE.CL_TELEFONO%TYPE,
    P_CL_SEXO      IN TBL_CLIENTE.CL_SEXO%TYPE,
    P_CL_FECHA_NAC IN TBL_CLIENTE.CL_FECHA_NAC%TYPE,
    P_CL_DIRECCION IN TBL_CLIENTE.CL_DIRECCION%TYPE,
    P_COD_RESPUESTA OUT NOCOPY NUMBER,
    P_MENSAJE OUT NOCOPY       VARCHAR2 )
AS
  V_EXISTECLIENTE INT;
BEGIN
  SELECT COUNT(CL_IDCLIENTE)
  INTO V_EXISTECLIENTE
  FROM TBL_CLIENTE
  WHERE CL_IDCLIENTE  = P_CL_IDCLIENTE;
  IF (V_EXISTECLIENTE = 0) THEN
    RAISE_APPLICATION_ERROR(-20004, 'CLIENTE NO ESTA REGISTRADO');
  END IF;
  UPDATE TBL_CLIENTE
  SET CL_NOMBRE      = P_CL_NOMBRE,
    CL_TELEFONO      = P_CL_TELEFONO,
    CL_SEXO          = P_CL_SEXO,
    CL_FECHA_NAC     = P_CL_FECHA_NAC,
    CL_DIRECCION     = P_CL_DIRECCION
  WHERE CL_IDCLIENTE = P_CL_IDCLIENTE;
  P_COD_RESPUESTA   := 0;
  P_MENSAJE         := 'SE ACTUALIZO EL CLIENTE';
  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  P_COD_RESPUESTA := -1;
  P_MENSAJE       := TO_CHAR(SQLCODE) || ' - ' || SQLERRM;
  ROLLBACK;
END SP_MODIFICAR_CLIENTE;
      
--ELIMINAR TBL_CLIENTE
PROCEDURE SP_ELIMINAR_CLIENTE(
    P_CL_IDCLIENTE IN TBL_CLIENTE.CL_IDCLIENTE%TYPE,
    P_COD_RESPUESTA OUT NOCOPY NUMBER,
    P_MENSAJE OUT NOCOPY       VARCHAR2 )
AS
  V_EXISTECLIENTE INT;
BEGIN
  SELECT COUNT(CL_IDCLIENTE)
  INTO V_EXISTECLIENTE
  FROM TBL_CLIENTE
  WHERE CL_IDCLIENTE  = P_CL_IDCLIENTE;
  IF (V_EXISTECLIENTE = 0) THEN
    RAISE_APPLICATION_ERROR(-20004, 'CLIENTE NO EXISTE');
  END IF;
  DELETE FROM TBL_CLIENTE WHERE CL_IDCLIENTE = P_CL_IDCLIENTE;
  P_COD_RESPUESTA := 0;
  P_MENSAJE       := 'SE ELIMINO AL CLIENTE';
  COMMIT;
EXCEPTION
WHEN OTHERS THEN
  P_COD_RESPUESTA := -1;
  P_MENSAJE       := TO_CHAR(SQLCODE) || ' - ' || SQLERRM;
  ROLLBACK;
END SP_ELIMINAR_CLIENTE;
      
--LEER VARIOS REGISTROS
PROCEDURE SP_LISTAR_CLIENTES(
    P_CURSOR OUT NOCOPY SYS_REFCURSOR,
    P_COD_RESPUESTA OUT NOCOPY NUMBER,
    P_MENSAJE OUT NOCOPY       VARCHAR2 )
AS
  V_EXISTECLIENTE INT;
BEGIN
  OPEN P_CURSOR FOR SELECT CL_IDCLIENTE, CL_DNI, CL_NOMBRE, CL_TELEFONO, CL_SEXO, CL_FECHA_NAC, CL_DIRECCION FROM TBL_CLIENTE ;
  P_COD_RESPUESTA := 0;
  P_MENSAJE       := 'SE SELECCIONO LOS CLIENTES';
EXCEPTION
WHEN OTHERS THEN
  P_COD_RESPUESTA := -1;
  P_MENSAJE       := TO_CHAR(SQLCODE) || ' - ' || SQLERRM;
END SP_LISTAR_CLIENTES;
      
--LEER SOLO UN REGISTRO
PROCEDURE SP_LISTAR_CLIENTE_ID(
    P_CL_IDCLIENTE IN TBL_CLIENTE.CL_IDCLIENTE%TYPE,
    P_CURSOR OUT NOCOPY SYS_REFCURSOR,
    P_COD_RESPUESTA OUT NOCOPY NUMBER,
    P_MENSAJE OUT NOCOPY       VARCHAR2 )
AS
  V_EXISTECLIENTE INT;
BEGIN
  SELECT COUNT(CL_IDCLIENTE)
  INTO V_EXISTECLIENTE
  FROM TBL_CLIENTE
  WHERE CL_IDCLIENTE  = P_CL_IDCLIENTE;
  IF (V_EXISTECLIENTE = 0) THEN
    RAISE_APPLICATION_ERROR(-20004, 'CLIENTE NO EXISTE');
  END IF;
  OPEN P_CURSOR FOR SELECT CL_IDCLIENTE,
  CL_DNI,
  CL_NOMBRE,
  CL_TELEFONO,
  CL_SEXO,
  CL_FECHA_NAC,
  CL_DIRECCION FROM TBL_CLIENTE WHERE CL_IDCLIENTE = P_CL_IDCLIENTE;
  P_COD_RESPUESTA                             := 0;
  P_MENSAJE                                   := 'SE SELECCCIONO CLIENTE';
EXCEPTION
WHEN OTHERS THEN
  P_COD_RESPUESTA := -1;
  P_MENSAJE       := TO_CHAR(SQLCODE) || ' - ' || SQLERRM;
END SP_LISTAR_CLIENTE_ID;
  
END PKG_CRUD_CLIENTE;
/