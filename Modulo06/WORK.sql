
CREATE SEQUENCE SCOTT.SQ_EMP;


CREATE OR REPLACE PROCEDURE SCOTT.NEW_EMP
( 
  P_NOMBRE  IN VARCHAR2, 
  P_SALARIO IN NUMBER
)
IS
  V_CODE NUMBER;
  V_MENSAJE VARCHAR2(2000);
BEGIN
  INSERT INTO SCOTT.EMP(EMPNO, ENAME, SAL)
  VALUES(SCOTT.SQ_EMP.NEXTVAL, P_NOMBRE, P_SALARIO);
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_CODE := SQLCODE;
    V_MENSAJE := SQLERRM;
    ROLLBACK;
    RAISE_APPLICATION_ERROR(-20000,V_MENSAJE 
    || '(CODE: ' || V_CODE || ')');
END;
/


CALL SCOTT.NEW_EMP('GUSTAVO',8888);

SELECT * FROM SCOTT.EMP;


CALL SCOTT.NEW_EMP('ANGEL',888888888);



CREATE OR REPLACE PROCEDURE SCOTT.NEW_EMP
( 
  P_NOMBRE  IN VARCHAR2, 
  P_SALARIO IN NUMBER,
  P_CODE    OUT NUMBER,
  P_MSG     OUT VARCHAR2
)
IS
BEGIN
  -- VALORES INICIALES
  P_CODE := 1;
  P_MSG  := 'PROCESO OK.';
  -- PROCESO
  INSERT INTO SCOTT.EMP(EMPNO, ENAME, SAL)
  VALUES(SCOTT.SQ_EMP.NEXTVAL, P_NOMBRE, P_SALARIO);
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    P_CODE := -1;
    P_MSG  := 'Error en el proceso, revisar los datos. ' 
      || '(SQLCODE: ' || SQLCODE || ')';
    ROLLBACK;
END;
/


DECLARE
  V_CODE NUMBER;
  V_MSG  VARCHAR2(2000);
BEGIN
  SCOTT.NEW_EMP('LAURA RAMOS VILLEGAS',5555,V_CODE,V_MSG);
  DBMS_OUTPUT.PUT_LINE('CODE: ' || V_CODE);
  DBMS_OUTPUT.PUT_LINE('MENSAJE: ' || V_MSG);
END;
/




